<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
		xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
		xmlns:viewModels="clr-namespace:Boggle.ViewModels"
		x:Class="Boggle.Views.AboutPage"
		x:DataType="viewModels:AboutViewModel"
		Title="About">

	<ContentPage.BindingContext>
		<viewModels:AboutViewModel />
	</ContentPage.BindingContext>

	<ScrollView Grid.Row="0" Orientation="Vertical">
		<Grid RowDefinitions="*,Auto" Margin="10" Padding="20,10,0,20">
			<VerticalStackLayout Padding="10,10,20,0">
				<Label Text="Instructions:" FontSize="Medium" />
				<Label Padding="10,10,0,0">
					<Label.FormattedText>
						<FormattedString>
							<FormattedString.Spans>
								<Span Text="1. Choose a Boggle game to play from the Games page. Various versions of Boggle " />
								<Span Text="are listed, with their board size, minimum word length, scoring table and dice collection. " />
								<Span Text="The scoring table shows the scores for words of 1, 2, 3, ... letters. For example, Boggle " />
								<Span Text="Classic's table is 0, 0, 1, 1, 2, 3, 5, 11, ... One and two letter words get no score, " />
								<Span Text="three and four letter words get one point, five letter words get two, six get three, seven get " />
								<Span Text="five and eight and longer get eleven. Super Big Boggle is similar: 0, 0, 0, 1, 2, 3, 5, 11, x 2, ... " />
								<Span Text="One to three letter words get zero, four get one, five get two, six get three, seven get " />
								<Span Text="five, eight get eleven and nine and above get twice the letter count (so eighteen, twenty, etc.). " />
							</FormattedString.Spans>
						</FormattedString>
					</Label.FormattedText>
				</Label>
				<Label Padding="10,10,0,0">
					<Label.FormattedText>
						<FormattedString>
							<FormattedString.Spans>
								<Span Text="2. Generate a board on the Game page. Use the Scramble button on the toolbar to randomly " />
								<Span Text="scramble the dice, or enter letters manually. You can enter a string of letters in the Letters: " />
								<Span Text="field or enter each letter individually by tapping a die and entering its letter. Refer to the Key " />
								<Span Text="for entering special letters, e.g. enter a 1 for the combo-letter Qu. Some Boggle sets come " />
								<Span Text="with a Bonus Cube with more combo letters. Tap the &quot;Use bonus cube&quot; toggle to " />
								<Span Text="add the Bonus Cube to the cube set. Note that cubes are chosen at random, so the bonus cube " />
								<Span Text="may or may not be used for a particular scrambling of the board." />
							</FormattedString.Spans>
						</FormattedString>
					</Label.FormattedText>
				</Label>
				<Label Padding="10,10,0,20">
					<Label.FormattedText>
						<FormattedString>
							<FormattedString.Spans>
								<Span Text="3. Solve the board on the Words page. Use the Solve button on the toolbar to find solutions. Tap " />
								<Span Text="a solution to see it on the board, the first letter is brown, the second red, then orange, yellow, " />
								<Span Text="green, blue, violet and the remaining letters are gray." />
							</FormattedString.Spans>
						</FormattedString>
					</Label.FormattedText>
				</Label>

				<Label Text="Notes:" FontSize="Medium" />
				<Label Padding="0,10,0,0">
					<Label.FormattedText>
						<FormattedString>
							<FormattedString.Spans>
								<Span Text="Boggle is written with Microsoft's new MAUI cross-platform development platform. It is under " />
								<Span Text="development and has many bugs. As such, you may notice a few anomalies. This build was built " />
								<Span Text="with .NET 8 MAUI, released on November 17, 2023. Below is a list of known issues:" />
							</FormattedString.Spans>
						</FormattedString>
					</Label.FormattedText>
				</Label>
				<Label Padding="10,10,0,0">
					<Label.FormattedText>
						<FormattedString>
							<FormattedString.Spans>
								<Span Text="1. Loading the solutions into the CollectionView can be slow, especially on lesser Android devices. " />
								<Span Text="In the first release, we attempted to load solutions dynamically, which ultimately worked on Android " />
								<Span Text="but not on Windows. For example, a MAUI bug caused Windows to fail to respond when a user attempted " />
								<Span Text="scrolling, making the list static. Fortunately, performance was improved with the .NET 8 MAUI release " />
								<Span Text="so now we load all the solutions at once. Dynamic loading may be possible in the future as more bugs " />
								<Span Text="are fixed." />
							</FormattedString.Spans>
						</FormattedString>
					</Label.FormattedText>
				</Label>
				<Label Padding="10,10,0,0">
					<Label.FormattedText>
						<FormattedString>
							<FormattedString.Spans>
								<Span Text="2. Another MAUI bug causes Windows to ignore the vertical spacing setting for the CollectionView, " />
								<Span Text="which means the solutions on Windows separated with too much space, not tidy like on Android." />
							</FormattedString.Spans>
						</FormattedString>
					</Label.FormattedText>
				</Label>
				<Label Padding="10,10,0,0">
					<Label.FormattedText>
						<FormattedString>
							<FormattedString.Spans>
								<Span Text="3. Typically, toolbar buttons are disabled when not appropriate. We haven't figured that feature out yet." />
							</FormattedString.Spans>
						</FormattedString>
					</Label.FormattedText>
				</Label>
				<Label Padding="10,10,0,0">
					<Label.FormattedText>
						<FormattedString>
							<FormattedString.Spans>
								<Span Text="4. Due to a bug in MAUI, the height of the solutions on the Words page is fixed, computed when the " />
								<Span Text="solutions are rendered, so resizing the app after tapping Solve causes the layout to behave strangely. " />
								<Span Text="Windows only (since Android apps can't be resized)." />
							</FormattedString.Spans>
						</FormattedString>
					</Label.FormattedText>
				</Label>
				<Label Padding="10,10,0,0">
					<Label.FormattedText>
						<FormattedString>
							<FormattedString.Spans>
								<Span Text="5. The art on the Toolbar isn't really working out, we need to figure that out as well." />
							</FormattedString.Spans>
						</FormattedString>
					</Label.FormattedText>
				</Label>
				<Label Padding="10,10,0,0">
					<Label.FormattedText>
						<FormattedString>
							<FormattedString.Spans>
								<Span Text="6. The International Boggle board appears to have a cube with a Q instead of a Qu. However, " />
								<Span Text="when the Q face is selected, the app automatically translates it to a Qu. " />
							</FormattedString.Spans>
						</FormattedString>
					</Label.FormattedText>
				</Label>
			</VerticalStackLayout>

			<HorizontalStackLayout Grid.Row="4" Spacing="10" Margin="0,20,0,0">
				<Image Source="dotnet_bot.png" SemanticProperties.Description="The dot net bot waving hello!"
						HeightRequest="64" />
				<Label FontSize="22" FontAttributes="Bold" Text="{Binding Title}" VerticalOptions="End" />
				<Label FontSize="16" Text="{Binding Version}" VerticalOptions="End" />
			</HorizontalStackLayout>
		</Grid>
	</ScrollView>
</ContentPage>
